@model ClayPay.Models.UserAccess

@{
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="margin-top: 1em;"
     id="views"
     class="container">

  <section class=""
           id="balancing">
    balancing
  </section>

  <section class="hide"
           id="onlinePayments">
    online payments
  </section>

  <section class="hide"
           id="receipts">
    receipts
  </section>

</div>
<script src="~/Scripts/Balancing/bundle.js"></script>

<script>
  document.addEventListener("DOMContentLoaded", function (event)
  {
    Balancing.Start();

    console.log("Initial Date To Finalize");

    var yesterday = new Date("2018-7-19");
    var CashierId = "18-013974";
    var dateToFinalize = "";
    var date = new Date();
    Utilities.Get("../API/Balancing/NextDateToFinalize").then(function (a)
    {
        console.log('response', a);
        date = a;
        dateToFinalize = date;
        console.log('dateToFinalize', date);

      var i = Utilities.Get("../API/Balancing/GetDJournal?DateToBalance=" + date);
      console.log("Initial Djournal", i);

      //// Had to use literal for payment type for testing. Cannot seem to reference Payment.js.
      //// It is in bundle as shown above but doesn't seem to let me reference it.
      var j = Utilities.Get("../API/Balancing/GetPayments?DateToBalance=" + date + "&PaymentType=" + "1");
      console.log("List of Payments", j);

      Utilities.Post("../API/Balancing/Finalize?DateToFinalize=" + date).then(function (k)
      {
        Utilities.Get("../API/Balancing/NextDateToFinalize").then(function (a)
        {
          console.log("NextDateToFinalize:", a);
        }).catch(function (e)
        {
          console.log("error", e);

        });
        console.log("Finalize Djournal date", k);

      }).catch(function (e)
      {
        console.log("error", e);
      });




        var l = Utilities.Get("../API/Balancing/UnassignedPayments");
        console.log("Fetch unassigned payments", l);

        var m = Utilities.Post("../API/Balancing/AssignPayment?CashierId=" + CashierId);
        console.log("Assign cashierId to current user (literal for testing: 18-013974", m);

        var n = Utilities.Post("../API/Balancing/UpdateAssignedPayment?CashierId=" + CashierId + "&update=" + true);
        console.log("Assign cashierId to current user (literal for testing: 18-013974", n);

      }).catch(function (e)
      {
        // figure out what we want to do with the errors.
        console.log("exception", e);
      });


    });
 
</script>